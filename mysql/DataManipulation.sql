USE Speed_Rider;

-- EXAMPLE TRIGGER
-- DROP TRIGGER IF EXISTS TR_INIT_CUSTOMER;
-- DELIMITER //
-- CREATE TRIGGER TR_CHECK_USER
-- BEFORE INSERT ON T_TRANSANCTION
-- FOR EACH ROW
-- BEGIN
-- INSERT INTO T_ACCOUNT (ACCOUNT_ID, ACCOUNT_TYPE, AMOUNT) VALUES (NEW.ACCOUNT_ID, 1, 0);
-- INSERT INTO T_ACCOUNT (ACCOUNT_ID, ACCOUNT_TYPE, AMOUNT) VALUES (NEW.ACCOUNT_ID, 2, 0);
-- END//
-- DELIMITER ;

DROP PROCEDURE IF EXISTS SP_LOGIN;
DELIMITER //
CREATE PROCEDURE SP_LOGIN(IN
P_USERNAME VARCHAR(32),
P_HASH CHAR(64))
BEGIN
	SELECT USER_ID, USER_TYPE
	FROM T_USER
	WHERE USERNAME = P_USERNAME AND SALTED_HASH = P_HASH;
END//
DELIMITER ;

DROP PROCEDURE IF EXISTS SP_GET_SALT;
DELIMITER //
CREATE PROCEDURE SP_GET_SALT(IN
P_USERNAME VARCHAR(32))
BEGIN
	SELECT LEFT(SALTED_HASH , 16)
	FROM T_USER
	WHERE USERNAME = P_USERNAME;
END//
DELIMITER ;

DROP PROCEDURE IF EXISTS SP_REGISTER;
DELIMITER //
CREATE PROCEDURE SP_REGISTER(IN
P_USERNAME VARCHAR(32),
P_SALTED_HASH CHAR(64),
P_FNAME VARCHAR(32),
P_LNAME VARCHAR(32),
P_EMAIL VARCHAR(50),
P_PRIM_PHONE CHAR(10),
P_SEC_PHONE CHAR(10),
P_USER_TYPE CHAR(5))
BEGIN
	IF EXISTS(SELECT * FROM T_USER WHERE USERNAME = P_USERNAME) THEN SELECT 0;
	ELSE INSERT INTO T_USER (USERNAME, SALTED_HASH, FNAME, LNAME, EMAIL, PRIM_PHONE, USER_TYPE)
			VALUES(P_USERNAME,P_SALTED_HASH,P_FNAME,P_LNAME,P_EMAIL, P_PRIM_PHONE, P_SEC_PHONE, P_USER_TYPE);
	END IF;
END//
DELIMITER ;

-- NEED TO DISGUST HOW TO IMPLMENT FINDN NEAREST DRIVER AND CLIENT AND CREATE STORED PROCEDURE



