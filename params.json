{
  "name": "Speed-rider",
  "tagline": "CS160 Project for SJSU",
  "body": "### Welcome to Speed-Rider\r\nThis project was created by:\r\nVivi Langga, James, Anh Le, Kevin Hou, and Joseph Hu\r\n\r\n### Project Description\r\n> Team 2, 4: On-Demand Shuttle Service Problem statement – New shuttle services, “Speed Rider”, in the Bay Area counties (San Francisco, San Mateo, Santa Clara, Alameda, Contra Costa) needs a system to allow sub-contracted drivers to locate their next customer request.  Require mapping, time based traffic events, and location based searches to guarantee the wait time to 30 minutes from the time of request. You are responsible to develop the website for both the customer and driver.  Customer can go onto this website and request a ride.  The cost is based on distance and time (like how a taxi works).  The website will include logic to find the next closest available driver based on real-time driving time to reach customer.  Once it does, it will dispatch the drivers to the customer location.\r\n\r\n### Requirements\r\n```\r\nHW / Software Requirements: OS – MS Windows Web Server – Apache Database – Any relational DBMS for storing and retrieving data (e.g. MySQL) Client – Should work on any web browser. Data – Create sample (but make it realistic) data for demo and testing purpose Map – Use Google Maps for any map related components Android or iOS – for any mobile components or clients\r\n```\r\n### Deliverable Dates\r\n```\r\nPart I:  Due Date: 3/3/15\r\nProject Requirement Document – 3 page minimum 1. Clearly problem statement 2. Proposed solutions with your project 3. Break #1 and #2 down with details, usage scenarios, flow diagrams, … etc.\r\nPart II:  Due Date: 3/17/15\r\nArchitecture and Design Documents\r\n1. Architecture / High-level Design: 2 page minimum, must include architecture flow, component\r\ndesigns and descriptions, HW, SW, Tools, …2. Low-level Design: 5 page minimum, break down component design information into details. Logic can be represented in pseudo code.  Important note – you will likely need to do some research and prototyping of the different technology prior to completing this task. 3. High-level Test Plan: 2 page minimum, must include test strategy, functional/component test descriptions (goals, expectations),  test metrics, tools or methodology to be used, …\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}